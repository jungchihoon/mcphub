# 🚀 성능 모니터링 에이전트 Dockerfile
FROM node:18-alpine AS builder

# 작업 디렉토리 설정
WORKDIR /app

# 패키지 파일 복사
COPY package*.json ./
COPY tsconfig.json ./

# 의존성 설치
RUN npm ci --only=production

# 소스 코드 복사
COPY src/services/performance-agent ./src/services/performance-agent
COPY src/types ./src/types

# TypeScript 컴파일
RUN npm run build

# 🐳 프로덕션 이미지
FROM node:18-alpine AS production

# 보안을 위한 비루트 사용자 생성
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# 작업 디렉토리 설정
WORKDIR /app

# 패키지 파일 복사
COPY package*.json ./

# 프로덕션 의존성만 설치
RUN npm ci --only=production && npm cache clean --force

# 컴파일된 코드 복사
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist

# 성능 모니터링 에이전트 전용 설정
ENV NODE_ENV=production
ENV PERFORMANCE_AGENT_PORT=9090

# 비루트 사용자로 전환
USER nodejs

# 헬스 체크
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:9090/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# 포트 노출
EXPOSE 9090

# 성능 모니터링 에이전트 시작
CMD ["node", "dist/services/performance-agent/performanceAgent.js"]
